#!/bin/sh
#
# $Id$
#

# error out on failed commands whose return code wasn't explicitly
# checked
set -e

usage() {
cat << EOF

$0 [options]

Builds a non-cygwin version of pcb and create a standalone
windows installer.

Supported options:

  --debug         - Omits the compiler flag which prevents
                    a command window from being opened.  This
                    is useful when trying to use debug printf's

  --disable-doc   - Pass "--disable-doc" to the configure script.

  --help          - Show this message and exit.

  --skip-build    - Skip the "make" step of the process.

  --skip-config   - Skip the "./configure" step of the process.

  --skip-install  - Skip the "make install" step of the process.

EOF
}

debug=no
do_config=yes
do_build=yes
do_install=yes
while test $# -ne 0 ; do
	case $1 in
		--debug)
			debug=yes
			shift
			;;

		--disable-doc)
			config_args="${config_args} --disable-doc"
			shift
			;;

		--help)
			usage
			exit 0
			;;

		--skip-build)
			do_build=no
			shift
			;;

		--skip-config)
			do_config=no
			shift
			;;

		--skip-install)
			do_install=no
			shift
			;;

		-*)
			echo "ERROR:  Unknown option $1"
			usage
			exit 1
			;;

		*)
			break
			;;
	esac
done

# Run this under cygwin to build pcb and create a windows installer for
# it.  Thanks to Bob Paddock for pointing me to NSIS and answering some 
# beginner windows questions.

# where gtk_win32 is installed
gtk_win32=c:\\cygwin\\home\\${USER}\\gtk_win32

# where only the runtime components are installed
gtk_win32_runtime=c:\\\\cygwin\\\\home\\\\${USER}\\\\gtk_win32_runtime

# pcb version

pcb_version=`awk '/AM_INIT_AUTOMAKE/ {gsub(/.*,[ \t]*/, ""); gsub(/\).*/, ""); print}' configure.ac `
echo "pcb_version=${pcb_version}"

# location of the NSIS makensis executible (see http://nsis.sourceforge.net)
makensis="/cygdrive/c/Program Files/NSIS/makensis.exe"


# ########################################################################
#
# The rest should be ok without editing
#
# ########################################################################


# source directory
srcdir=`pwd.exe`/win32
top_srcdir=${srcdir}/..

src_dir=c:\\\\cygwin`echo ${srcdir} | sed 's;/;\\\\\\\\;g'`
top_src_dir=c:\\\\cygwin`echo ${top_srcdir} | sed 's;/;\\\\\\\\;g'`


# where to install pcb
pcb_inst=`pwd`/pcb_inst

# DOS version
pcb_inst_dir=c:\\\\cygwin`echo ${pcb_inst} | sed 's;/;\\\\\\\\;g'`

PKG_CONFIG_PATH=${gtk_win32}\\lib\\pkgconfig
export PKG_CONFIG_PATH

PATH=${gtk_win32}\\bin:${PATH}
export PATH

echo "Showing packages known to pkg-config:"
pkg-config --list-all

WISH=/usr/bin/true
export WISH

# add the gcc options to produce a native windows binary that
# does not need cygwin to run
if test "x${debug}" = "xno" ; then
	EXTRA_FLAGS="-mwindow"
fi

CYGWIN_CFLAGS="-mms-bitfields -mno-cygwin ${EXTRA_FLAGS}"
export CYGWIN_CFLAGS

CYGWIN_CPPFLAGS="-mms-bitfields -mno-cygwin ${EXTRA_FLAGS}"
export CYGWIN_CPPFLAGS

# setting WIN32=yes will make sure that the desktop icon
# gets compiled in
if test "$do_config" = "yes" ; then
echo "Configuring for cygwin"
( ( ( env WIN32=yes ./configure \
	--prefix=${pcb_inst} \
	--disable-nls \
	--with-exporters="bom gerber ps" \
	--with-printer="" \
	${config_args} \
	2>&1 ; echo $? >&4 ) | tee c.log 1>&3) 4>&1 | (read a ; exit $a)) 3>&1

if test $? -ne 0 ; then
	echo "**** ERROR **** Configure failed. See log in c.log"
	exit 1
fi

fi

if test "$do_build" = "yes" ; then
echo "Building for cygwin"
( ( ( make 2>&1 ; echo $? >&4) | tee m.log 1>&3) 4>&1 | (read a ; exit $a) ) 3>&1
if test $? -ne 0 ; then
	echo "**** ERROR **** Build failed. See log in m.log"
	exit 1
fi
fi

if test "$do_install" = "yes" ; then
echo "Installing for cygwin"
( ( ( make install 2>&1 ; echo $? >&4) | tee -a m.log 1>&3) 4>&1 | (read a ; exit $a) ) 3>&1
if test $? -ne 0 ; then
	echo "**** ERROR **** Build failed. See log in m.log"
	exit 1
fi
fi

echo "Creating NSIS script"
echo "srcdir = ${srcdir}"
echo "src_dir = ${src_dir}"
echo "top_srcdir = ${top_srcdir}"
echo "top_src_dir = ${top_src_dir}"

sed \
	-e "s;@pcb_version@;${pcb_version};g" \
	-e "s;@pcb_prefix@;${pcb_inst_dir};g" \
	-e "s;@pcb_srcdir@;${top_src_dir};g" \
	-e "s;@gtk_win32_runtime@;${gtk_win32_runtime};g" \
	${srcdir}/pcb.nsi.in > ${srcdir}/pcb.nsi

echo "Creating windows installer"
"${makensis}" ${src_dir}/pcb.nsi


echo "Windows installer left in ${srcdir}:"
ls -l ${srcdir}/*.exe


